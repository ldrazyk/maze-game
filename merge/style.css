/* main.css */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --path: hsl(51, 10%, 54%);
    --wall: hsl(51, 15%, 15%);
    --dark-player1: hsl(216, 63%, 20%);
    --light-player1: hsl(216, 59%, 86%);
    --dark-player2: hsl(332, 74%, 21%);
    --light-player2: hsl(332, 38%, 85%);
    --header-height: 5vh;
    --main-height: calc(100vh - 2 * var(--header-height));
}

html {
    font-family: Arial, Helvetica, sans-serif;
}

html,
body,
#root {
    height: 100%;
}

#root {
    display: flex;
    flex-direction: column;
}

header,
footer {
    height: var(--header-height);
    /* width: 100%; */
    flex-shrink: 0;
    background-color: var(--path);
}

main {
    display: flex;
    /* flex-wrap: wrap; */
    flex-grow: 1;
    background-color: var(--path);
}

main>section {
    display: flex;
    flex-direction: column;
}

.board-section {
    flex-grow: 0.3;
    align-items: center;
}

.panels-section {
    flex-grow: 1;
}

.panel {
    flex-grow: 1;
}

.player-panel.player-1 {
    order: 3;
}

.player-panel.player-2 {
    order: 1;
}

.control-panel {
    order: 2;
}

.info-panel {
    order: 4;
}

.player-panel,
.info-panel {
    user-select: none;
}

@media (orientation: portrait) {

    header {
        height: 3vh;
    }

    main {
        flex-direction: column;
    }

    .board-section {
        flex-grow: 0;
    }

    footer {
        display: none;
    }
}


/* board.css */

:root {
    --large-border-width: 3px;
    --medium-border-width: 2px;
    --small-border-width: 2px;
}

/* .board */

.board {
    display: flex;
    flex-direction: column;
    width: var(--main-height);
    height: var(--main-height);
    background-color: var(--wall);
    border-style: solid;
    border-color: var(--wall);
    border-width: 0;
}

@media (orientation: portrait) {

    .board {
        width: 90vw;
        height: 90vw;
    }
}


.board.large-fields {
    border-bottom-width: var(--large-border-width);
    border-right-width: var(--large-border-width);
}

.board.medium-fields {
    border-bottom-width: var(--medium-border-width);
    border-right-width: var(--medium-border-width);
}

.board.small-fields {
    border-bottom-width: var(--small-border-width);
    border-right-width: var(--small-border-width);
}

/* .row */

.row {
    display: flex;
    flex-basis: 100%;
}

/* .field */

.field {
    position: relative;
    flex-basis: 100%;
    border-style: solid;
    border-color: var(--wall);
    border-width: 0;
}

.board.large-fields .field {
    border-top-width: var(--large-border-width);
    border-left-width: var(--large-border-width);
}

.board.medium-fields .field {
    border-top-width: var(--medium-border-width);
    border-left-width: var(--medium-border-width);
}

.board.small-fields .field {
    border-top-width: var(--small-border-width);
    border-left-width: var(--small-border-width);
}

.field.selected,
.field.active,
.field.in-reach {

    cursor: pointer;
}

.wall {
    background-color: var(--wall);
}

.path,
.exit {
    background-color: var(--path);
}

/* colors */

.player-1 .dark {

    fill: var(--dark-player1);
}

.player-1 .light {

    fill: var(--light-player1);
}

.player-2 .dark {

    fill: var(--dark-player2);
}

.player-2 .light {

    fill: var(--light-player2);
}

/* svg */

.board svg {

    visibility: hidden;
}

svg.flag {

    visibility: unset;
}

.hidden {
    
    visibility: hidden;
}

.pawn.lion svg.lion,
.pawn.rooster svg.rooster,
.pawn.snake svg.snake {

    visibility: visible;
}

.field.active svg.active,
.field.in-reach svg.reach {

    visibility: visible;
}

.field.active:hover svg.active,
.field.in-reach:hover svg.reach {
    
    visibility: hidden;
}

.field.active:hover svg.hover,
.field.in-reach:hover svg.hover {

    visibility: visible;
}

.field.selected .highlight.player-1 {

    background-color: var(--light-player1);
} 

.field.selected .highlight.player-2 {

    background-color: var(--light-player2);
}

.wake {

    visibility: hidden;
}

.field.selected .wake,
.field.active:hover .wake {

    visibility: unset;
}

.pawn.player-2,
.flag.player-2 {

    transform: scaleX(-1);
}

.in-reach .left,
.in-reach .right {

    transform: rotate(90deg);
}

.in-reach:hover .left,
.in-reach:hover .right {

    transform: none;
}

.field .container,
.field svg {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}

/* playerPanel.css */

.player-panel {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: center;
    padding-left: 1vh;
    font-size: 3vh;
    font-weight: bold;
}

.player-panel.player-1,
.player-panel.player-1 input {
    color: var(--dark-player1);
    background-color: var(--light-player1);
}

.player-panel.player-2,
.player-panel.player-2 input {
    color: var(--dark-player2);
    background-color: var(--light-player2);
}

input.player-name {
    flex-basis: 100%;
    font-size: 2em;
    font-weight: bold;
    background-color: transparent;
    border: none;
    outline: none;
}

.player-1 input.player-name:focus {
    color: var(--light-player1);
    background-color: var(--dark-player1);
}

.player-2 input.player-name:focus {
    color: var(--light-player2);
    background-color: var(--dark-player2);
}

.player-panel p {
    padding: 0 20px 0 0;
    /* font-size: 15%; */
}

.player-panel .when-active {
    display: none;
}

.player-panel.active .when-active {
    display: block;
}

@media (orientation: portrait) {

    .player-panel {
        font-size: 2vh;
    }
}

/* controlPanel.css */

.control-panel {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* flex-grow: 0; */
    padding: 3vh 0;
    background-color: var(--path);
}

.control-panel.player-1 {
    background-color: var(--light-player1);
}

.control-panel.player-2 {
    background-color: var(--light-player2);
}

.control-panel>.wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    width: 45vh;
    background-color: var(--path);
}

/* button */

.control-panel button,
.control-panel .dummy {
    position: relative;
    height: 15vh;
    width: 15vh;
    border: none;
    background-color: var(--path);
}

.control-panel .dummy {
    display: none;
    height: 1px;
    width: 1px;
    background-color: var(--path);
    /* background-color: transparent; */
}

.control-panel button.active {
    cursor: pointer;
}

.control-panel button .container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.3;
}

.control-panel button.active .container {
    opacity: 1;
}

.container.negative {
    visibility: hidden;
}

button.active:hover .container.positive {
    visibility: hidden;
}

button.active:hover .container.negative {
    visibility: visible;
}

.control-panel button .dark {
    fill: var(--wall);
}

button.select {
    order: 1;
}

button.up {
    order: 2;
}

button.turn {
    order: 3;
}

button.left {
    order: 4;
}

button.hold {
    order: 5;
}

button.right {
    order: 6;
}

button.undo {
    order: 7;
}

button.down {
    order: 8;
}

button.redo {
    order: 9;
}

button.right .container {
    transform: rotate(90deg);
}

button.down .container {
    transform: rotate(180deg);
}

button.left .container {
    transform: rotate(270deg);
}

button.redo .container {
    transform: scaleX(-1);
}


@media (orientation: portrait) and (max-width: 900px) {

    .control-panel {
        padding: 1vh 0;
    }
    
    .control-panel>.wrapper {
        width: 90vw;
    }
    
    .control-panel button {
        height: 18vw;
        width: 18vw;
    }

    .control-panel .dummy-1 {
        display: block;
        order: 0;
    }

    button.select {
        order: 1;
    }
    
    button.undo {
        order: 2;
    }
    
    button.redo {
        order: 3;
    }
    
    button.turn {
        order: 4;
    }
    
    .control-panel .dummy-2 {
        display: block;
        order: 5;
    }
    
    button.up {
        order: 6;
    }
    
    button.down {
        order: 7;
    }

    button.left {
        order: 8;
    }
    
    button.right {
        order: 8;
    }
    
    button.hold {
        order: 10;
    }
}

